/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ChangeDetectionStrategy } from '@angular/core';
import { PickerBaseComponent } from './pickerBase.component';
import { PickerDisplayMode } from 'filestack-js';
var PickerDropPaneComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PickerDropPaneComponent, _super);
    function PickerDropPaneComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    PickerDropPaneComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _a = this, filestackService = _a.filestackService, uploadSuccess = _a.uploadSuccess, uploadError = _a.uploadError, pickerOptions = _a.pickerOptions;
        // Overwrite display mode to be always 'dropPane' in this component
        this.picker = filestackService.picker(tslib_1.__assign({}, pickerOptions, { displayMode: PickerDisplayMode.dropPane, container: 'ng-picker-drop-pane-container', onUploadDone: (/**
             * @param {?} res
             * @return {?}
             */
            function (res) { return uploadSuccess.next(res); }) }));
        // Picker open success handler there is ommited, because it's accessible from pickerOptions
        this.picker.open()
            .then(void (0))
            .catch((/**
         * @param {?} err
         * @return {?}
         */
        function (err) { return uploadError.next(err); }));
    };
    PickerDropPaneComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-picker-drop-pane',
                    template: '<div id="ng-picker-drop-pane-container" class="ng-picker"></div>',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    return PickerDropPaneComponent;
}(PickerBaseComponent));
export { PickerDropPaneComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja2VyRHJvcFBhbmUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpbGVzdGFjay9hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL3BpY2tlci9waWNrZXJEcm9wUGFuZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUNULHVCQUF1QixFQUUxQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM3RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQ7SUFLNkMsbURBQW1CO0lBTGhFOztJQXNCQSxDQUFDOzs7O0lBaEJHLG9EQUFrQjs7O0lBQWxCO1FBQ1EsSUFBQSxTQUFzRSxFQUFwRSxzQ0FBZ0IsRUFBRSxnQ0FBYSxFQUFFLDRCQUFXLEVBQUUsZ0NBQXNCO1FBRTVFLG1FQUFtRTtRQUNuRSxJQUFJLENBQUMsTUFBTSxHQUFHLGdCQUFnQixDQUFDLE1BQU0sc0JBQ2hDLGFBQWEsSUFDaEIsV0FBVyxFQUFFLGlCQUFpQixDQUFDLFFBQVEsRUFDdkMsU0FBUyxFQUFFLCtCQUErQixFQUMxQyxZQUFZOzs7O1lBQUUsVUFBQSxHQUFHLElBQUksT0FBQSxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUF2QixDQUF1QixLQUM1QyxDQUFDO1FBRUgsMkZBQTJGO1FBQzNGLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO2FBQ2YsSUFBSSxDQUFDLEtBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNiLEtBQUs7Ozs7UUFBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQXJCLENBQXFCLEVBQUMsQ0FBQztJQUN6QyxDQUFDOztnQkFyQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFFBQVEsRUFBRSxrRUFBa0U7b0JBQzVFLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs7SUFrQkQsOEJBQUM7Q0FBQSxBQXRCRCxDQUs2QyxtQkFBbUIsR0FpQi9EO1NBakJZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ29tcG9uZW50LFxuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIEFmdGVyQ29udGVudEluaXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQaWNrZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9waWNrZXJCYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWNrZXJEaXNwbGF5TW9kZSB9IGZyb20gJ2ZpbGVzdGFjay1qcyc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ25nLXBpY2tlci1kcm9wLXBhbmUnLFxuICAgIHRlbXBsYXRlOiAnPGRpdiBpZD1cIm5nLXBpY2tlci1kcm9wLXBhbmUtY29udGFpbmVyXCIgY2xhc3M9XCJuZy1waWNrZXJcIj48L2Rpdj4nLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBpY2tlckRyb3BQYW5lQ29tcG9uZW50IGV4dGVuZHMgUGlja2VyQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAgIGNvbnN0IHsgZmlsZXN0YWNrU2VydmljZSwgdXBsb2FkU3VjY2VzcywgdXBsb2FkRXJyb3IsIHBpY2tlck9wdGlvbnMgfSA9IHRoaXM7XG5cbiAgICAgIC8vIE92ZXJ3cml0ZSBkaXNwbGF5IG1vZGUgdG8gYmUgYWx3YXlzICdkcm9wUGFuZScgaW4gdGhpcyBjb21wb25lbnRcbiAgICAgIHRoaXMucGlja2VyID0gZmlsZXN0YWNrU2VydmljZS5waWNrZXIoe1xuICAgICAgICAuLi5waWNrZXJPcHRpb25zLFxuICAgICAgICBkaXNwbGF5TW9kZTogUGlja2VyRGlzcGxheU1vZGUuZHJvcFBhbmUsXG4gICAgICAgIGNvbnRhaW5lcjogJ25nLXBpY2tlci1kcm9wLXBhbmUtY29udGFpbmVyJyxcbiAgICAgICAgb25VcGxvYWREb25lOiByZXMgPT4gdXBsb2FkU3VjY2Vzcy5uZXh0KHJlcylcbiAgICAgIH0pO1xuXG4gICAgICAvLyBQaWNrZXIgb3BlbiBzdWNjZXNzIGhhbmRsZXIgdGhlcmUgaXMgb21taXRlZCwgYmVjYXVzZSBpdCdzIGFjY2Vzc2libGUgZnJvbSBwaWNrZXJPcHRpb25zXG4gICAgICB0aGlzLnBpY2tlci5vcGVuKClcbiAgICAgICAgLnRoZW4odm9pZCgwKSlcbiAgICAgICAgLmNhdGNoKGVyciA9PiB1cGxvYWRFcnJvci5uZXh0KGVycikpO1xuICAgIH1cbn1cbiJdfQ==